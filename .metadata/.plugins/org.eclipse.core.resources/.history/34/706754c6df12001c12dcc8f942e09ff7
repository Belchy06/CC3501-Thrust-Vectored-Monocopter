/* ###################################################################
**     Filename    : main.c
**     Project     : _Assignment
**     Processor   : MK22FN512VDC12
**     Version     : Driver 01.01
**     Compiler    : GNU C Compiler
**     Date/Time   : 2021-09-11, 18:59, # CodeGen: 0
**     Abstract    :
**         Main module.
**         This module contains user's application code.
**     Settings    :
**     Contents    :
**         No public methods
**
** ###################################################################*/
/*!
** @file main.c
** @version 01.01
** @brief
**         Main module.
**         This module contains user's application code.
*/         
/*!
**  @addtogroup main_module main module documentation
**  @{
*/         
/* MODULE main */


/* Including needed modules to compile this module/procedure */
#include "Cpu.h"
#include "Events.h"
#include "Pins1.h"
#include "CI2C1.h"
#include "IntI2cLdd1.h"
#include "BT.h"
#include "Inhr1.h"
#include "ASerialLdd1.h"
/* Including shared modules, which are used for whole project */
#include "PE_Types.h"
#include "PE_Error.h"
#include "PE_Const.h"
#include "IO_Map.h"
#include "PDD_Includes.h"
#include "Init_Config.h"
/* User includes (#include below this line is not maintained by Processor Expert) */
#include "BNO085.h"
#include "Sensors.h"
#include <stdbool.h>
#include "printf.h"

#define BNO080_DEFAULT_ADDRESS 0x4A
#define PI 3.14159
#define RAD_TO_DEGREES 57.2958
#define MS_TO_GS 0.1019

float h;
float ax, ay, az;
float gx, gy, gz;
float mx, my, mz;
float pitch, roll, yaw;
uint8_t accelAccuracy, gyroAccuracy, magAccuracy;
float quatRadianAccuracy;
float tau = 0.98;

char str[128];
char level[32];

char* getAccuracyLevel(uint8_t accuracyNumber) {
	if(accuracyNumber == 0) {
		sprintf(level, "Unreliable");
	} else if(accuracyNumber == 1) {
		sprintf(level, "Low");
	} else if(accuracyNumber == 2) {
		sprintf(level, "Medium");
	} else if(accuracyNumber == 3) {
		sprintf(level, "High");
	} else {
		sprintf(level, "Unknown");
	}
	return level;
}

/*lint -save  -e970 Disable MISRA rule (6.3) checking. */
int main(void)
/*lint -restore Enable MISRA rule (6.3) checking. */
{
  /* Write your local variable definition here */

  /*** Processor Expert internal initialization. DON'T REMOVE THIS CODE!!! ***/
  PE_low_level_init();
  /*** End of Processor Expert internal initialization.                    ***/

  /* Write your code here */
  /* For example: for(;;) { } */

  /*** Don't write any code pass this line, or it will be deleted during code generation. ***/
  /*** RTOS startup code. Macro PEX_RTOS_START is defined by the RTOS component. DON'T MODIFY THIS CODE!!! ***/
  #ifdef PEX_RTOS_START
    PEX_RTOS_START();                  /* Startup of the selected RTOS. Macro is defined by the RTOS component. */
  #endif
  /*** End of RTOS startup code.  ***/
  /*** Processor Expert end of main routine. DON'T MODIFY THIS CODE!!! ***/
  for(;;){}
  /*** Processor Expert end of main routine. DON'T WRITE CODE BELOW!!! ***/
} /*** End of main routine. DO NOT MODIFY THIS TEXT!!! ***/

/* END main */
/*!
** @}
*/
/*
** ###################################################################
**
**     This file was created by Processor Expert 10.5 [05.21]
**     for the Freescale Kinetis series of microcontrollers.
**
** ###################################################################
*/
